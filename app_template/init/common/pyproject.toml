# ==== pytest ====
[tool.pytest.ini_options]
minversion = "7.4"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== ruff ====
[tool.ruff]
# Many copied from dewfault config from documentation https://docs.astral.sh/ruff/configuration/
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__init__.py",
    "migrations/versions"
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
# TODO: Возможно стоит убрать из игнора C901, INP001, RUF012, TID252, ANN401
ignore = [
    "ARG001", "ARG002", "ARG003", "C901", "COM812", "D100", "D101", "D102",
    "D103", "D105", "D200", "D202", "D205", "D212", "D415",
    "EM101", "EM102", "ERA001", "FBT001", "FBT002", "INP001", "PLR0913",
    "RUF001", "RUF002", "RUF003", "RUF012", "TID252", "TRY003",
    "ANN002", "ANN003", "ANN201", "ANN204", "ANN401", "FIX", "TD",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# ==== black ====
[tool.black]
line-length = 120
target-version = ['py311']
force-exclude = ".venv|venv|requirements.txt|requirements-dev.txt"


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
default_section = "THIRDPARTY"
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = []
skip = [".venv", "venv/"]
skip_glob = []

# ==== pyright ====
[tool.pyright]
exclude = [
    ".mypy_cache",
    "**/__pycache__",
    "dev",
    ".venv",
    "venv",
    "migrations/env.py",
]


# ==== bandit ====
[tool.bandit]
exclude_dirs = ["dev", ".venv", "venv"]
skips = ["B703", "B308"]


# ==== pylint ====
[tool.pylint.main]
jobs = 0
ignore-paths = [
    ".venv",
    "venv",
]
# Разрешение f-string в логировании
disable = ["logging-fstring-interpolation"]

[tool.pylint.format]
max-line-length = 120


# ==== misc ====
venv = ".venv"
pythonVersion = "3.11"
